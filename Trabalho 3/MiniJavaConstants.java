/* Generated By:JavaCC: Do not edit this line. MiniJavaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MAIN = 7;
  /** RegularExpression Id. */
  int CLASS = 8;
  /** RegularExpression Id. */
  int PUB = 9;
  /** RegularExpression Id. */
  int VOID = 10;
  /** RegularExpression Id. */
  int EXT = 11;
  /** RegularExpression Id. */
  int STR = 12;
  /** RegularExpression Id. */
  int STATIC = 13;
  /** RegularExpression Id. */
  int LENGTH = 14;
  /** RegularExpression Id. */
  int RETURN = 15;
  /** RegularExpression Id. */
  int INTEIRO = 16;
  /** RegularExpression Id. */
  int BOOL = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int WHILE = 20;
  /** RegularExpression Id. */
  int PRINT = 21;
  /** RegularExpression Id. */
  int NEW = 22;
  /** RegularExpression Id. */
  int LPAREN = 23;
  /** RegularExpression Id. */
  int RPAREN = 24;
  /** RegularExpression Id. */
  int LBRACE = 25;
  /** RegularExpression Id. */
  int RBRACE = 26;
  /** RegularExpression Id. */
  int LCBRACK = 27;
  /** RegularExpression Id. */
  int RCBRACK = 28;
  /** RegularExpression Id. */
  int SEMI = 29;
  /** RegularExpression Id. */
  int COMMA = 30;
  /** RegularExpression Id. */
  int PERIOD = 31;
  /** RegularExpression Id. */
  int OPERADOR_MULTIPLICATIVO = 32;
  /** RegularExpression Id. */
  int OPERADOR_ADITIVO = 33;
  /** RegularExpression Id. */
  int AND = 34;
  /** RegularExpression Id. */
  int COMP = 35;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 36;
  /** RegularExpression Id. */
  int IGUAL = 37;
  /** RegularExpression Id. */
  int TRUE = 38;
  /** RegularExpression Id. */
  int FALSE = 39;
  /** RegularExpression Id. */
  int THIS = 40;
  /** RegularExpression Id. */
  int EXCLAMATION = 41;
  /** RegularExpression Id. */
  int ID = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"main\"",
    "\"class\"",
    "\"public\"",
    "\"void\"",
    "\"extends\"",
    "\"String\"",
    "\"static\"",
    "\"length\"",
    "\"return\"",
    "\"int\"",
    "\"boolean\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"System.out.println\"",
    "\"new\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"*\"",
    "<OPERADOR_ADITIVO>",
    "\"&&\"",
    "\"<\"",
    "<INTEGER_LITERAL>",
    "\"=\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"!\"",
    "<ID>",
  };

}
